.wrapper
  .top-area
    .top-area__image{:style => "background-image: url(#{@review.images[0].image_url});"}
    .top-area__detail
      .top-area__detail--map
        .google-map{id:'map'}
        .address{id:'address'}
          ="#{@prefecture.name}#{@review.address}"
      %table.top-area__detail--imfomation
        %tr
          %th
            投稿者
          %th
            =link_to "/users/#{@user.id}" do
              =@user.nickname
        %tr
          %th
            件名
          %th
            =@review.subject
        %tr
          %th
            都道府県
          %th
            =link_to "/prefectures/#{@review.prefecture_id}" do
              =@prefecture.name
        %tr
          %th
            参考URL
          %th
            =link_to "#" do
              =@review.movie
  .like-area
    - if Like.find_by(user_id: @current_user.id, review_id: @review.id)
      = link_to "/likes/#{@review.id}/destroy",method: :post do
        %i.far.fa-grin-squint.like_btn_already
        %span.likes_count= @likes_count
    - else
      = link_to "/likes/#{@review.id}/create",method: :post do
        %i.far.fa-grin-squint.like_btn
        %span.likes_count= @likes_count
  .bottom-area
    .text-area
      .text-area__title
        記事内容
      .text-area__main
        =@review.text
    .comment-area
      .comment-area__title
        コメント欄
      .comment-area__main
        -@comments.each do |comment|
          .comment-box
            .comment-box__top
              .comment-username
                =comment.user.nickname
              .daytime
                =comment.created_at.to_s(:datetime_jp)
            .comment-box__bottom
              =comment.message
      =link_to "/reviews/#{@review.id}/comment",class:"comment-link" do
        コメントする / コメントの一覧を見る
        
  -if @user.id == @current_user.id
    .btn-area
      =link_to "/reviews/#{@review.id}/destroy", method: :post, class:"btn-area__destroy" do
        投稿を削除する
      =link_to "/reviews/#{@review.id}/edit", class:"btn-area__modify" do
        投稿を修正する


  :javascript
    let map
    let geocoder
    
    function initMap(){
    
      geocoder = new google.maps.Geocoder()
    
      map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -34.397, lng: 150.644},
      zoom: 15
      });
      let inputAddress = $('.address').text();
    
      geocoder.geocode( { 'address': inputAddress}, function(results, status) {
        if (status == 'OK') {
          map.setCenter(results[0].geometry.location);

    let marker = new google.maps.Marker({
              map: map,
              position: results[0].geometry.location
          });
        } else {
          alert('Geocode was not successful for the following reason: ' + status);
        }
      });
    }
    
    
  %script{:async => "", :defer => "defer", :src => "https://maps.googleapis.com/maps/api/js?key=#{ENV["GOOGLEMAP_KEY"]}&callback=initMap"}